<div class="card m-2" id="comments-new">
    <div class="card-body">
        <!-- 댓글 작성 폼 -->
        <form>
            <!-- 닉네임 입력 -->
            <div class="mb-3">
                <label class="form-label">닉네임</label>
                <input type="text" class="form-control" id="new-comment-nickname">
            </div>
            <!-- 댓글 본문 입력 -->
            <div class="mb-3">
                <label class="form-label">댓글 내용</label>
                <textarea type="text" class="form-control" rows="3"
                          id="new-comment-body"></textarea>
            </div>
            <!--  히든 인풋 => 웹 페이지에 표시되지 않는 요소, 보이지는 않지만 값을 가지고 있어야 할 때 사용 ex> 댓글이 부모 게시글의 id 값을 가지고 있어야함. 댓글이 게시글에 종속되기 때문에 이럴 때 부모 게시글의 id를 히든 인풋으로 넣기 -->
            {{#article}}
                <input type="hidden" id="new-comment-article-id" value="{{id}}">
            {{/article}}
            <!-- 전송 버튼 -->
            <button type="button" class="btn btn-primary"
                    id="comment-create-btn">댓글 작성</button>
        </form>
    </div>
</div>
<script>
    // 댓글 작성 버튼 누르면 댓글 입력할 수 있도록 자바스크립트 사용해보기!
    {
        // 댓글 생성 버튼 변수화
        const commentCreateBtn = document.querySelector("#comment-create-btn");
        // 댓글 클릭 이벤트 감지
        commentCreateBtn.addEventListener("click", function() {
            // 새 댓글 객체를 생성하기 -> 객체 리터럴 방식(객체를 변수로 선언해 사용하는 방식)으로
            const comment = {
                // 새 댓글의 닉네임
                nickname: document.querySelector("#new-comment-nickname").value,
                // 새 댓글의 본문
                body: document.querySelector("#new-comment-body").value,
                // 부모 게시글의 id
                articleId: document.querySelector("#new-comment-article-id").value
            };
            // 댓글 객체 출력
            console.log(comment);

            // fetch() - 비동기 통신을 위한 API
            const url = "/api/articles/" + comment.articleId + "/comments";
            fetch(url, {
                method: "POST", // POST 요청
                headers: { // 전송 본문의 데이터 타입(JSON) 정보
                "Content-Type": "application/json"
            },
                body: JSON.stringify(comment) //comment 객체를 JSON 문자열로 변환해 전송
            }) .then(response => {
                // HTTP 응답 코드에 따른 메시지 출력
                const msg = (response.ok) ? "댓글 등록 성공" : "댓글 등록 실패";
                alert(msg); //알림창 띄우기
                window.location.reload(); // 창 새로고침 -> 참이든 아니든 결과를 반영
            });
        });
    }
</script>